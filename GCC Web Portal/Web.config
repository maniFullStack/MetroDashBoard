<?xml version="1.0" encoding="utf-8"?>
<!--
	For more information on how to configure your ASP.NET application, please visit
	http://go.microsoft.com/fwlink/?LinkId=169433
	-->
<configuration>
	<configSections>
		
		<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
	<!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 --><sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
		<section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" /><section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" /><section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" /></sectionGroup></configSections>
	<appSettings>
		<add key="LogToFile" value="true" />
		<add key="LogToDatabase" value="false" />
		<add key="LogToEventLog" value="false" />
		<add key="LogFileDirectory" value="~/Files/Logs/" />
		<add key="CacheFileDirectory" value="~/Files/Cache/" />
		<add key="EmailPINFileDirectory" value="~/Files/PINFiles/" />
		<add key="LogTableName" value="tblSYSAppErrorLogs" />
		<add key="EnforceSSL" value="false" />
		<add key="LoginPage" value="~/Login" />
		<add key="LoginPageWithRedirect" value="~/Login?rd=" />
		<add key="GCC_StagingPortalURL" value="http://localhost:13033/"/>
	<add key="GCCPortalURL" value="http://localhost:13033/"/>
	</appSettings>
	<connectionStrings>
		<!-- Values are also set in debug/release configs. -->
		<!--<add name="DatabaseDefault"
				 connectionString="Data Source=SQL2;Initial Catalog=GCC;Integrated Security=SSPI;"
				 providerName="System.Data.SqlClient" />
		<add name="DatabaseReporting"
				 connectionString="Data Source=SQL2;Initial Catalog=GCC;Integrated Security=SSPI;"
				 providerName="System.Data.SqlClient" />-->


		<add name="DatabaseDefault" connectionString="Data Source=dbstaging1;Initial Catalog=GCC;Integrated Security=SSPI;" providerName="System.Data.SqlClient"/>
		<add name="DatabaseReporting" connectionString="Data Source=dbstaging1;Initial Catalog=GCC;Integrated Security=SSPI;" providerName="System.Data.SqlClient"/>
		
		<!--<add name="Excel"
				 connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source={0}.xls;Extended Properties=&quot;Excel 8.0;HDR=YES;&quot;"
				 providerName="System.Data.OleDb.OleDbConnectionStringBuilder" />-->
		<add name="Excel" connectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties=&quot;Excel 12.0 Xml;HDR=YES;&quot;" providerName="System.Data.OleDb.OleDbConnectionStringBuilder"/>
		<add name="OldExcel" connectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=&quot;{0}&quot;;Extended Properties=&quot;Excel 8.0;HDR=Yes;IMEX=1&quot;" providerName="System.Data.OleDb.OleDbConnectionStringBuilder"/>
	</connectionStrings>
	<system.webServer>
		<httpProtocol>
			<customHeaders>
				<remove name="X-AspNet-Version" />
				<remove name="X-UA-Compatible"/>
				<add name="X-Frame-Options" value="SAMEORIGIN"/>
				<add name="X-UA-Compatible" value="IE=EDGE" />
			</customHeaders>
		</httpProtocol>
		<httpErrors errorMode="DetailedLocalOnly">
			<clear/>
			<error statusCode="401" path="/Errors/GeneralError.aspx?e=401" responseMode="ExecuteURL"/>
			<error statusCode="403" path="/Errors/GeneralError.aspx?e=403" responseMode="ExecuteURL"/>
			<error statusCode="404" path="/Errors/GeneralError.aspx?e=404" responseMode="ExecuteURL"/>
			<error statusCode="405" path="/Errors/GeneralError.aspx?e=405" responseMode="ExecuteURL"/>
			<error statusCode="406" path="/Errors/GeneralError.aspx?e=406" responseMode="ExecuteURL"/>
			<error statusCode="412" path="/Errors/GeneralError.aspx?e=412" responseMode="ExecuteURL"/>
			<error statusCode="500" path="/Errors/GeneralError.aspx?e=500" responseMode="ExecuteURL"/>
			<error statusCode="501" path="/Errors/GeneralError.aspx?e=501" responseMode="ExecuteURL"/>
			<error statusCode="502" path="/Errors/GeneralError.aspx?e=502" responseMode="ExecuteURL"/>
		</httpErrors>
	</system.webServer>
	<location path="Reports/SocialMediaDashboard.aspx">
		<system.web>
			<httpRuntime executionTimeout="2400"/>
		</system.web>
	</location>
	<system.web>
		<compilation debug="true" targetFramework="4.5.1" />
		<httpRuntime targetFramework="4.5.1" enableVersionHeader="false" />
		<customErrors mode="RemoteOnly" defaultRedirect="~/Errors/GeneralError.aspx" />
		<pages viewStateEncryptionMode="Always">
			<namespaces>
				<add namespace="System.Web.Optimization" />
			</namespaces>
		<controls>
			
			<add tagPrefix="sc" namespace="SharedClasses" assembly="SharedClasses" />
		<add assembly="Microsoft.AspNet.Web.Optimization.WebForms" namespace="Microsoft.AspNet.Web.Optimization.WebForms" tagPrefix="webopt" /></controls></pages>
		<authentication mode="Forms">
			<forms loginUrl="~/Account/Login" timeout="2880" defaultUrl="~/" />
		</authentication>
		<profile defaultProvider="DefaultProfileProvider">
			<providers>
				<add name="DefaultProfileProvider" type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
			</providers>
		</profile>
		<membership defaultProvider="DefaultMembershipProvider">
			<providers>
				<add name="DefaultMembershipProvider" type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
			</providers>
		</membership>
		<roleManager defaultProvider="DefaultRoleProvider">
			<providers>
				<add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
			</providers>
		</roleManager>
		<!--
						If you are deploying to a cloud environment that has multiple web server instances,
						you should change session state mode from "InProc" to "Custom". In addition,
						change the connection string named "DefaultConnection" to connect to an instance
						of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
			-->
		<sessionState mode="InProc" customProvider="DefaultSessionProvider">
			<providers>
				<add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" />
			</providers>
		</sessionState>
	</system.web>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" />
				<bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" />
				<bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" />
				<bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	<!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
				 to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 --><!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). --><legacyHMACWarning enabled="0" /></runtime>
	<entityFramework>
		<defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
		<providers>
			<provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
		</providers>
	</entityFramework>
<dotNetOpenAuth>
		<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. --><!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ --><openid>
			<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
							 with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
				</behaviors>
			</relyingParty>
		</openid>
	<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging><!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. --><reporting enabled="true" /></dotNetOpenAuth><uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
				 which is necessary for OpenID urls with unicode characters in the domain/host name.
				 It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri><system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
					 before trusting HTTPS certificates.  But this setting tends to not 
					 be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
		<mailSettings>
			<smtp deliveryMethod="SpecifiedPickupDirectory">
				<specifiedPickupDirectory pickupDirectoryLocation="C:\mail-drop"/>
			</smtp>
			
					<!--<smtp deliveryMethod="Network">
							<network host="mx1.forumresearch.com" />
					</smtp>-->
			
		</mailSettings>
	</system.net></configuration>